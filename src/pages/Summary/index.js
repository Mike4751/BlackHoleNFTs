import { useRouter } from "next/router";
import Head from "next/head";
import Link from "next/link";

import { useState, useEffect, useContext } from "react";
import { Alchemy, Network } from "alchemy-sdk";

import Header from "../../components/Header";
import Cookies from "js-cookie";
import { Store } from "../../utils/Store";

export default function Summary() {
  const { state, dispatch } = useContext(Store);

  const clearClickHandler = () => {
    Cookies.remove("cart");
    dispatch({ type: "CART_RESET" });
  };
  console.log(state);
  const cartItems = state.cart.cartItems;
  console.log(cartItems);

  const [cart, setCart] = useState(cartItems);
  const [gatewayList, setGatewayList] = useState([]);
  const [loading, setLoading] = useState(false);

  useEffect(() => {
    async function gateway() {
      const settings = {
        apiKey: process.env.MAIN_API_KEY,
        network: Network.ETH_MAINNET,
      };
      const alchemy = new Alchemy(settings);
      let list = [];
      for (let i = 0; i < cartItems.length; i++) {
        const alchemyResponse = await alchemy.nft.getNftMetadata(
          cartItems[i].address,
          cartItems[i].tokenId
        );
        const gate = alchemyResponse.media[0].gateway;
        const name = alchemyResponse.contract.name;
        const type = alchemyResponse.tokenType;

        list.push({ gateway: gate, name: name, type: type });
        console.log("LIST", list);
      }

      setGatewayList(list);
      clearClickHandler();
    }
    gateway();
  }, [loading]);

  return (
    <>
      <Head>
        <title>Summary</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/blackhole1.ico" />
      </Head>
      <div class="fixed top-0 right-0 left-0 z-[100]">
        <Header />
      </div>

      <main class="mt-32">
        <div class="grid px-10 md:grid-cols-4 md:gap-5">
          <div class="overflow-x-auto md:col-span-4">
            <div class="card overflow-x-auto p-5">
              <h2 class="mb-2 text-lg">
                Success! <Link href="/myNFTs">Go check 'em out</Link>
              </h2>
              <table class="min-w-full">
                <tbody>
                  {gatewayList.length > 0 &&
                    cart.map((item, i) => {
                      return (
                        <tr key={item.tokenId} class="border-b">
                          <td>
                            <Link
                              href={{
                                pathname: "/NFT",
                                query: {
                                  nft: JSON.stringify({
                                    address: item.address,
                                    tokenId: item.tokenId,
                                  }),
                                },
                              }}
                              class="flex items-center"
                            >
                              <img
                                src={gatewayList[i].gateway}
                                alt={item.tokenId}
                                width={50}
                                height={50}
                              ></img>
                              &nbsp;
                              {gatewayList[i].name} {item.tokenId}
                            </Link>
                          </td>
                        </tr>
                      );
                    })}
                </tbody>
              </table>
            </div>
          </div>
        </div>
      </main>
    </>
  );
}
